{"version":3,"file":"react-horizontal-auto-scroll.cjs.production.min.js","sources":["../src/Helper.ts","../src/index.tsx"],"sourcesContent":["import { ScrollerOptionalProps, ScrollerProps } from \".\";\n\nexport const registerEvent = (el: HTMLInputElement | null, props: ScrollerOptionalProps) => {\n\n    if (el != null) {\n        let d: HTMLInputElement = el;\n        const wheel = (evt: WheelEvent) => {\n            let deltaY = evt.deltaY;\n            scrollhandle(evt, deltaY, props, d)\n        }\n        document.addEventListener('wheel', wheel, { passive: false });\n        var ts: number;\n        const touchstart = (e: TouchEvent) => {\n            console.log(e)\n            ts = e.changedTouches[0].clientY;\n        }\n        document.addEventListener('touchstart', touchstart);\n        const touchmove = (evt: TouchEvent) => {\n            var te = evt.changedTouches[0].clientY;\n            let deltaY: number;\n            if (ts > te) {\n                deltaY = 100;\n            } else {\n                deltaY = -100;\n            }\n            scrollhandle(evt, deltaY, props, d)\n        }\n        document.addEventListener('touchmove', touchmove, { passive: false });\n        return function cleanUp() {\n            document.removeEventListener('wheel', wheel);\n            document.removeEventListener('touchstart', touchstart);\n            document.removeEventListener('touchmove', touchmove)\n            console.log(\"event listeners removed\");\n        }\n    }\n    return () => {\n        console.log(\"no event listeners removed\");\n    }\n}\n\nexport const wait = (ms: number) => new Promise((resolve) => {\n    setTimeout(() => { resolve(0); }, ms);\n})\n\nexport function isInViewport(element: Element) {\n    const rect = element.getBoundingClientRect();\n    let height = rect.bottom - rect.top;\n    return (\n        rect.top >= 0 - height / 2 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) + height / 2 &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\nfunction element_center_postion(element: Element) {\n    const rect = element.getBoundingClientRect();\n    let height = rect.bottom - rect.top;\n    return rect.top + window.scrollY - height / 4;\n}\nconst scrollhandle = (evt: Event, deltaY: number, props: ScrollerProps, d: Element) => {\n    let inViewport = isInViewport(d);\n    let isScrollable = d.scrollWidth > window.innerWidth;\n    let scrollMax = d.scrollWidth;\n    let sign = deltaY / Math.abs(deltaY);\n    let scrollDistance = sign * (Math.max(Math.abs(deltaY), 120) || 120) * Math.abs(Math.min(props.scrollSpeed || 3, 10));\n    if (props.isSlideShow) {\n        scrollDistance = sign * window.innerWidth;\n    }\n    if (deltaY > 0) {\n        //down\n        if (isScrollable && inViewport && d.scrollLeft < scrollMax - window.innerWidth) {\n            console.log(d.scrollWidth, window.innerWidth)\n            evt.preventDefault();\n            window.scroll({\n                top: element_center_postion(d),\n                behavior: \"smooth\"\n            });\n            d.scrollTo({\n                top: 0,\n                left: d.scrollLeft + scrollDistance,\n                behavior: 'smooth'\n            });\n        }\n    } else {\n        //up\n        if (props.reverse) {\n            if (isScrollable && inViewport && d.scrollLeft > 0) {\n                console.log(d.scrollWidth, window.innerWidth)\n                evt.preventDefault();\n                //d.scrollLeft += evt.deltaY;\n                window.scroll({\n                    top: element_center_postion(d),\n                    behavior: \"smooth\"\n                });\n                d.scrollTo({\n                    top: 0,\n                    left: d.scrollLeft + scrollDistance,\n                    behavior: 'smooth'\n                });\n            }\n        }\n    }\n}","import * as React from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport { registerEvent } from './Helper';\n\n\n\n\n// Optional props\nexport interface ScrollerOptionalProps {\n  scrollSpeed?: number, //1-10,\n  isSlideShow?: boolean,\n  reverse?: boolean,\n}\n\n// Combine required and optional props to build the full prop interface\nexport interface ScrollerProps\n  extends\n  ScrollerOptionalProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> { }\n\n// Use the optional prop interface to define the default props\nconst defaultProps: ScrollerOptionalProps = {\n  scrollSpeed: 3,\n  isSlideShow: false,\n  reverse:false\n};\n\nconst Scroller = (props: ScrollerProps) => {\n  //let [id, setId] = React.useState<string>();\n  let sc = React.useRef<HTMLInputElement>(null)\n  let { scrollSpeed, isSlideShow, reverse,children, ...rest } = props;\n  React.useEffect(() => {\n    //let uniqueId = \"_\" + uuidv4();\n    //setId(uniqueId);\n    let scProps :ScrollerOptionalProps = {\n      scrollSpeed,\n      isSlideShow,\n      reverse\n    }; \n\n    const element = sc.current;\n    \n    return registerEvent(element, scProps);\n  }, [sc]);\n  return (<div ref={sc} {...rest}>{children}</div>);\n};\nScroller.defaultProps = defaultProps;\nexport default Scroller;"],"names":["element_center_postion","element","rect","getBoundingClientRect","top","window","scrollY","bottom","scrollhandle","evt","deltaY","props","d","height","inViewport","left","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isScrollable","scrollWidth","scrollMax","sign","Math","abs","scrollDistance","max","min","scrollSpeed","isSlideShow","scrollLeft","console","log","preventDefault","scroll","behavior","scrollTo","reverse","Scroller","sc","React","children","rest","_objectWithoutPropertiesLoose","_excluded","el","ts","wheel","addEventListener","passive","touchstart","e","changedTouches","clientY","touchmove","removeEventListener","registerEvent","current","ref","defaultProps"],"mappings":"2FAsDA,SAASA,EAAuBC,GAC5B,IAAMC,EAAOD,EAAQE,wBAErB,OAAOD,EAAKE,IAAMC,OAAOC,SADZJ,EAAKK,OAASL,EAAKE,KACY,EAEhD,IAAMI,EAAe,SAACC,EAAYC,EAAgBC,EAAsBC,GACpE,IAfMV,EACFW,EAcAC,GAfEZ,EAewBU,EAfTT,yBAGZC,KAAO,GAFZS,EAASX,EAAKK,OAASL,EAAKE,KAEH,GACzBF,EAAKa,MAAQ,GACbb,EAAKK,SAAWF,OAAOW,aAAeC,SAASC,gBAAgBC,cAAgBN,EAAS,GACxFX,EAAKkB,QAAUf,OAAOgB,YAAcJ,SAASC,gBAAgBI,aAU7DC,EAAeX,EAAEY,YAAcnB,OAAOgB,WACtCI,EAAYb,EAAEY,YACdE,EAAOhB,EAASiB,KAAKC,IAAIlB,GACzBmB,EAAiBH,GAAQC,KAAKG,IAAIH,KAAKC,IAAIlB,GAAS,MAAQ,KAAOiB,KAAKC,IAAID,KAAKI,IAAIpB,EAAMqB,aAAe,EAAG,KAC7GrB,EAAMsB,cACNJ,EAAiBH,EAAOrB,OAAOgB,YAE/BX,EAAS,EAELa,GAAgBT,GAAcF,EAAEsB,WAAaT,EAAYpB,OAAOgB,aAChEc,QAAQC,IAAIxB,EAAEY,YAAanB,OAAOgB,YAClCZ,EAAI4B,iBACJhC,OAAOiC,OAAO,CACVlC,IAAKJ,EAAuBY,GAC5B2B,SAAU,WAEd3B,EAAE4B,SAAS,CACPpC,IAAK,EACLW,KAAMH,EAAEsB,WAAaL,EACrBU,SAAU,YAKd5B,EAAM8B,SACFlB,GAAgBT,GAAcF,EAAEsB,WAAa,IAC7CC,QAAQC,IAAIxB,EAAEY,YAAanB,OAAOgB,YAClCZ,EAAI4B,iBAEJhC,OAAOiC,OAAO,CACVlC,IAAKJ,EAAuBY,GAC5B2B,SAAU,WAEd3B,EAAE4B,SAAS,CACPpC,IAAK,EACLW,KAAMH,EAAEsB,WAAaL,EACrBU,SAAU,kECvExBG,EAAW,SAAC/B,GAEhB,IAAIgC,EAAKC,SAA+B,MAClCZ,EAAwDrB,EAAxDqB,YAAaC,EAA2CtB,EAA3CsB,YAAaQ,EAA8B9B,EAA9B8B,QAAQI,EAAsBlC,EAAtBkC,SAAaC,oIAAIC,CAAKpC,EAAKqC,GAcnE,OAbAJ,aAAgB,WAWd,ODvCyB,SAACK,EAA6BtC,GAEvD,GAAU,MAANsC,EAAY,CACZ,IAMIC,EANAtC,EAAsBqC,EACpBE,EAAQ,SAAC1C,GAEXD,EAAaC,EADAA,EAAIC,OACSC,EAAOC,IAErCK,SAASmC,iBAAiB,QAASD,EAAO,CAAEE,SAAS,IAErD,IAAMC,EAAa,SAACC,GAChBpB,QAAQC,IAAImB,GACZL,EAAKK,EAAEC,eAAe,GAAGC,SAE7BxC,SAASmC,iBAAiB,aAAcE,GACxC,IAAMI,EAAY,SAACjD,GAQfD,EAAaC,EALTyC,EAFKzC,EAAI+C,eAAe,GAAGC,QAGlB,KAEC,IAEY9C,EAAOC,IAGrC,OADAK,SAASmC,iBAAiB,YAAaM,EAAW,CAAEL,SAAS,IACtD,WACHpC,SAAS0C,oBAAoB,QAASR,GACtClC,SAAS0C,oBAAoB,aAAcL,GAC3CrC,SAAS0C,oBAAoB,YAAaD,GAC1CvB,QAAQC,IAAI,4BAGpB,OAAO,WACHD,QAAQC,IAAI,+BCKTwB,CAFSjB,EAAGkB,QANkB,CACnC7B,YAAAA,EACAC,YAAAA,EACAQ,QAAAA,MAMD,CAACE,IACIC,qCAAKkB,IAAKnB,GAAQG,GAAOD,IAEnCH,EAASqB,aAzBmC,CAC1C/B,YAAa,EACbC,aAAa,EACbQ,SAAQ"}